{"swagger":"2.0","info":{"version":"0.1","title":"Sessions API","license":{"name":"MIT"},"description":"This is an API for creating/joining Q&A sessions and asking questions. Authentication is handled by encrypted session cookies. When you create a session you are automatically authed as an answerer for that session. When you join a session you are automatically authed as a questioner for that session. You can only be authed to one session at a time, and creating new sessions will revoke your authentication for previous sessions. The authorization for a questioner and an answerer are two different cookies. The questioner cookie contains a JSON representation of a QuestionerId. The answerer cookie contains a JSON representation of an AnswererId."},"paths":{"/sessions":{"get":{"produces":["application/json"],"responses":{"200":{"schema":{"items":{"$ref":"#/definitions/FullSession"},"type":"array"},"description":""}}},"post":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"},{"required":true,"schema":{"$ref":"#/definitions/SessionReq"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body` or `Cookie`"},"200":{"schema":{"$ref":"#/definitions/Session"},"description":""}}}},"/sessions/{session_id}/lock":{"post":{"produces":["text/plain;charset=utf-8"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"},{"required":true,"in":"path","name":"session_id","type":"integer"}],"responses":{"404":{"description":"`session_id` not found"},"400":{"description":"Invalid `Cookie`"},"204":{"description":""}}}},"/sessions/{session_id}":{"get":{"produces":["application/json"],"parameters":[{"required":true,"in":"path","name":"session_id","type":"integer"}],"responses":{"404":{"description":"`session_id` not found"},"200":{"schema":{"$ref":"#/definitions/FullSession"},"description":""}}},"delete":{"produces":["text/plain;charset=utf-8"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"},{"required":true,"in":"path","name":"session_id","type":"integer"}],"responses":{"404":{"description":"`session_id` not found"},"400":{"description":"Invalid `Cookie`"},"204":{"description":""}}}},"/sessions/{session_id}/join":{"post":{"produces":["application/json"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"},{"required":true,"in":"path","name":"session_id","type":"integer"}],"responses":{"404":{"description":"`session_id` not found"},"400":{"description":"Invalid `Cookie`"},"200":{"schema":{"$ref":"#/definitions/User"},"description":""}}}},"/sessions/{session_id}/questions/ask":{"post":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"},{"required":true,"in":"path","name":"session_id","type":"integer"},{"required":true,"schema":{"$ref":"#/definitions/QuestionReq"},"in":"body","name":"body"}],"responses":{"404":{"description":"`session_id` not found"},"400":{"description":"Invalid `body` or `Cookie`"},"200":{"schema":{"$ref":"#/definitions/Question"},"description":""}}}},"/sessions/{session_id}/questions/{question_id}/upvote":{"post":{"produces":["application/json"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"},{"required":true,"in":"path","name":"session_id","type":"integer"},{"required":true,"in":"path","name":"question_id","type":"integer"}],"responses":{"404":{"description":"`session_id` or `question_id` not found"},"400":{"description":"Invalid `Cookie`"},"200":{"schema":{"$ref":"#/definitions/Question"},"description":""}}}},"/sessions/{session_id}/questions/{question_id}/answer":{"post":{"produces":["application/json"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"},{"required":true,"in":"path","name":"session_id","type":"integer"},{"required":true,"in":"path","name":"question_id","type":"integer"}],"responses":{"404":{"description":"`session_id` or `question_id` not found"},"400":{"description":"Invalid `Cookie`"},"200":{"schema":{"$ref":"#/definitions/Question"},"description":""}}}},"/sessions/{session_id}/messages":{"get":{"description":"This endpoint representation may additionally be implemented as a websocket endpoint. There's no way to represent websocket endpoints in Swagger at the moment so this representation pulls double duty. The HTTP endpoint must only return `SessionState` messages. The websocket endpoint can send any of the enumerated message types, but it must start transmission with a `SessionState` message.","produces":["application/json"],"parameters":[{"required":true,"in":"path","name":"session_id","type":"integer"}],"responses":{"404":{"description":"`session_id` not found"},"200":{"schema":{"$ref":"#/definitions/SessionMessage"},"description":""}},"schemes":["ws","http"]}},"/users/login":{"post":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/LoginReq"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/User"},"headers":{"Set-Cookie":{"format":"binary","type":"string"}},"description":""}}}},"/users":{"post":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/UserReq"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/User"},"headers":{"Set-Cookie":{"format":"binary","type":"string"}},"description":""}}}},"/users/me":{"get":{"produces":["application/json"],"parameters":[{"format":"binary","in":"header","name":"Cookie","type":"string"}],"responses":{"400":{"description":"Invalid `Cookie`"},"200":{"schema":{"$ref":"#/definitions/User"},"description":""}}}}},"definitions":{"FullSession":{"required":["session","answerer","questions","questioners"],"properties":{"session":{"$ref":"#/definitions/Session"},"answerer":{"$ref":"#/definitions/User"},"questions":{"items":{"$ref":"#/definitions/Question"},"type":"array"},"questioners":{"items":{"$ref":"#/definitions/User"},"type":"array"}},"type":"object"},"Session":{"required":["sessionId","name","locked"],"properties":{"sessionId":{"$ref":"#/definitions/SessionId"},"name":{"type":"string"},"expiresAt":{"$ref":"#/definitions/UTCTime"},"locked":{"$ref":"#/definitions/LockedStatus"}},"type":"object"},"SessionId":{"type":"integer"},"UTCTime":{"example":"2016-07-22T00:00:00Z","format":"yyyy-mm-ddThh:MM:ssZ","type":"string"},"LockedStatus":{"type":"string","enum":["Locked","Unlocked"]},"User":{"required":["userId","userName","answererSessions","questionerSessions"],"properties":{"userId":{"$ref":"#/definitions/UserId"},"userName":{"type":"string"},"answererSessions":{"items":{"$ref":"#/definitions/SessionId"},"type":"array"},"questionerSessions":{"items":{"$ref":"#/definitions/SessionId"},"type":"array"}},"type":"object"},"UserId":{"type":"integer"},"Question":{"required":["questionId","sessionId","questionVotes","questionText","questionAnswered"],"properties":{"questionId":{"$ref":"#/definitions/QuestionId"},"sessionId":{"$ref":"#/definitions/SessionId"},"questionVotes":{"$ref":"#/definitions/Votes"},"questionText":{"type":"string"},"questionAnswered":{"$ref":"#/definitions/Answered"}},"type":"object"},"QuestionId":{"type":"integer"},"Votes":{"items":{"$ref":"#/definitions/UserId"},"type":"array"},"Answered":{"type":"boolean"},"SessionReq":{"required":["sessionName"],"properties":{"sessionName":{"type":"string"},"sessionExpiration":{"$ref":"#/definitions/UTCTime"}},"type":"object"},"QuestionReq":{"required":["question"],"properties":{"question":{"type":"string"}},"type":"object"},"SessionMessage":{"description":"This is a variant type (sum type, discriminated union) representing the possible session messages. The `tag` field determines which fields are additionally present. Unless otherwise specified, only the `tag` field is present. If `tag` is `SessionStarted`, `answerer` is present. If `tag` is `SessionExceptionMessage`, `exception` is present. If `tag` is `QuestionAsked`, `QuestionUpvoted` or `QuestionAnswered`, `question` is present. If `tag` is `SessionState`, `session` is present. If `tag` is `QuestionerJoined`, `questioner` is present.","required":["tag"],"properties":{"tag":{"type":"string","enum":["SessionLocked","SessionExpired","SessionClosed","SessionExceptionMessage","QuestionAsked","QuestionUpvoted","QuestionAnswered","SessionState","QuestionerJoined"]},"answerer":{"$ref":"#/definitions/User"},"exception":{"$ref":"#/definitions/AppError"},"question":{"$ref":"#/definitions/Question"},"session":{"$ref":"#/definitions/FullSession"},"questioner":{"$ref":"#/definitions/User"}},"type":"object"},"AppError":{"type":"string","enum":["NotAuthorizedForSession","UserNotFound","QuestionNotFound","SessionNotFound","MustBeQuestioner","QuestionAlreadyUpvoted","SessionAlreadyLocked","MustBeAnswerer","InvalidCredentials"]},"LoginReq":{"required":["loginName","loginPassword"],"properties":{"loginName":{"type":"string"},"loginPassword":{"type":"string"}},"type":"object"},"UserReq":{"required":["userName","userPassword"],"properties":{"userName":{"type":"string"},"userPassword":{"type":"string"}},"type":"object"}}}